{"version":3,"sources":["searchService.js","components/Searchbar.js","components/ImageGalleryItem.js","components/ImagesGallery.js","components/Button.js","components/Modal.js","searchBigImg.js","App.js","index.js"],"names":["FetchPhotos","searchQuery","searchPage","url","axios","get","then","data","hits","catch","err","console","log","Searchbar","addImages","loadMore","givenPage","annulePage","isLoading","useState","query","setQuery","page","setPage","useEffect","a","newData","handleSearch","e","preventDefault","arrData","className","onSubmit","type","name","autoComplete","autoFocus","placeholder","onChange","target","value","ImageGalleryItem","map","hit","index","id","src","webformatURL","alt","ImagesList","Button","pageCount","incrementPage","onClick","Modal","imgUrl","closeModalOverlay","searchBigImg","largeImageURL","App","setData","setIsLoading","modalIsOpen","setModalIsOpen","bigImgUrl","setBigImgUrl","foundData","document","addEventListener","closeModal","querySelector","openModal","moreData","window","scrollTo","top","documentElement","scrollHeight","behavior","initialPage","pageNumber","keyCode","width","color","style","position","left","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.34cfe12c.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport function FetchPhotos(searchQuery, searchPage) {\r\n    const baseUrl = 'https://pixabay.com/api/';\r\n    const api_key = '23036221-d804a8a78d7b0866edf7d8fc3';\r\n    let url = `${baseUrl}?key=${api_key}&q=${searchQuery}&page=${searchPage}&image_type=photo&orientation=horizontal&per_page=12`\r\n\r\n       return axios\r\n            .get(url)\r\n            .then((data) => {\r\n                return data\r\n            })\r\n            .then((data) => {\r\n                return data.data.hits\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n}","import { useState, useEffect } from 'react'\r\nimport { FetchPhotos } from '../searchService';\r\n\r\nexport function Searchbar({addImages, loadMore, givenPage, annulePage, isLoading}) {\r\n    const [query, setQuery] = useState('')\r\n    const [page, setPage] = useState(1)\r\n\r\n    useEffect(async() => {\r\n       if (page != givenPage) {\r\n           await setPage(givenPage)\r\n            isLoading(true)\r\n            let newData;\r\n            await FetchPhotos(query, page).then((data) => { newData = data })\r\n            isLoading(false);\r\n            loadMore(newData)\r\n        } \r\n    }, [givenPage])\r\n\r\n    const handleSearch = async(e) => {\r\n        e.preventDefault()\r\n\r\n        let initialPage = 1;\r\n        await annulePage(initialPage)\r\n\r\n        let arrData;\r\n        await FetchPhotos(query, page).then((data) => { arrData = data })\r\n        addImages(arrData)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setQuery(e.target.value)\r\n    }\r\n\r\n    return (\r\n            <header className=\"Searchbar\">\r\n            <form className=\"SearchForm\" onSubmit={handleSearch}>\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n\r\n                <input\r\n                className=\"SearchForm-input\"\r\n                name=\"searchQuery\"\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        onChange={handleChange}\r\n                />\r\n            </form>\r\n            </header> \r\n        )\r\n}\r\n","export default function ImageGalleryItem({ hits }) {\r\n    const renderedData = hits.data.map((hit, index) => {\r\n        return (\r\n            <li key={index} className=\"ImageGalleryItem\">\r\n                <img\r\n                    id={hit.id}\r\n                    src={hit.webformatURL}\r\n                    alt=\"image found\"\r\n                    className=\"ImageGalleryItem-image\"\r\n                />\r\n            </li>\r\n        )\r\n    })\r\n    return renderedData\r\n}","import ImageGalleryItem from \"./ImageGalleryItem\"\r\n\r\nexport default function ImagesList(data) {  \r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            <ImageGalleryItem hits={data}/>\r\n        </ul>\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\n\r\nexport function Button({pageCount, givenPage}) {\r\n    const [page, setPage] = useState(1)\r\n\r\n    useEffect(async () => {\r\n        if (page !== givenPage) {\r\n            await setPage(givenPage)\r\n        }\r\n    }, [givenPage])\r\n\r\n    const incrementPage = async() => {\r\n        await setPage(page + 1)\r\n        await pageCount(page)\r\n    }\r\n\r\n    return (\r\n            <button\r\n                type=\"button\"\r\n                className=\"Button\"\r\n                onClick={incrementPage}\r\n            >Load More\r\n            </button>\r\n        )\r\n}","export function Modal({ imgUrl, closeModalOverlay }) {\r\n    const closeModal = () => {\r\n        let modalIsOpen = false;\r\n        closeModalOverlay(modalIsOpen);\r\n    }\r\n    return (\r\n            <div className=\"Overlay\" onClick={closeModal}>\r\n                <div className=\"Modal\">\r\n                    <img src={imgUrl} alt=\"Big image\" />\r\n                </div>\r\n            </div>\r\n        ) \r\n}","import axios from 'axios'\r\n\r\nexport function searchBigImg(id) {\r\n    const baseUrl = 'https://pixabay.com/api/';\r\n    const api_key = '23036221-d804a8a78d7b0866edf7d8fc3';\r\n    let url = `${baseUrl}?key=${api_key}&id=${id}`\r\n\r\n    return axios\r\n        .get(url)\r\n        .then((data) => {\r\n            return data\r\n        })\r\n        .then((data) => {\r\n            return data.data.hits[0].largeImageURL\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n}","//* CSS *//\r\nimport './App.scss';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\n//* Everything else *//\r\nimport { useState, useEffect } from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { Searchbar } from './components/Searchbar'\r\nimport ImagesGallery from './components/ImagesGallery'\r\nimport {Button} from './components/Button'\r\n\r\nimport { FetchPhotos } from './searchService';\r\nimport { Modal } from './components/Modal';\r\nimport { searchBigImg } from './searchBigImg'\r\n\r\nexport default function App() {\r\n    const [data, setData] = useState([])\r\n    const [page, setPage] = useState(1)\r\n    const [query, setQuery] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [modalIsOpen, setModalIsOpen] = useState(false)\r\n    const [bigImgUrl, setBigImgUrl] = useState('')\r\n\r\n    useEffect(async() => {\r\n        await setIsLoading(true)\r\n        let foundData;\r\n        await FetchPhotos(query, page).then((data) => {foundData = data})\r\n        setData(foundData)\r\n        setIsLoading(false)\r\n        document.addEventListener(\"keydown\", closeModal)\r\n        document.querySelector(\".ImageGallery\").addEventListener(\"click\", openModal)\r\n    }, [])\r\n\r\n    const addImages = (arrData) => {\r\n        setData(arrData)\r\n    }\r\n\r\n    const loadMore = async (moreData) => {\r\n        setData([...data, ...moreData])\r\n        window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n        });\r\n    }\r\n\r\n    const annulePage = async(initialPage) => {\r\n        await setPage(initialPage)\r\n    }\r\n\r\n    const pageCount = async(pageNumber) => {\r\n        await setPage(pageNumber)\r\n    }\r\n\r\n    const thisIsLoading = (isLoading) => {\r\n        setIsLoading(isLoading)\r\n    }\r\n\r\n    const openModal = async(e) => {\r\n        await setModalIsOpen(true)\r\n        await searchBigImg(e.target.id).then((bigImgUrl) => { setBigImgUrl(bigImgUrl) })\r\n    }\r\n\r\n    const closeModal = (e) => {\r\n        if (modalIsOpen === false) {\r\n            return\r\n        }\r\n        if (e.keyCode === 27) {\r\n            setModalIsOpen(false)\r\n            setBigImgUrl('')\r\n        }\r\n    }\r\n\r\n    const closeModalOverlay = (modalIsOpen) => {\r\n        setModalIsOpen(modalIsOpen)\r\n        setBigImgUrl('')\r\n    }\r\n\r\n    const style = {\r\n      position: \"fixed\",\r\n      top: \"50%\",\r\n      left: \"35%\",\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {modalIsOpen ? <Modal imgUrl={bigImgUrl} closeModalOverlay={closeModalOverlay}/> : null}\r\n        <Searchbar addImages={addImages} loadMore={loadMore} givenPage={page} annulePage={annulePage} isLoading={thisIsLoading}/>\r\n        {isLoading ? <Loader className=\"loader\" type=\"ThreeDots\" width=\"500px\" color=\"#00BFFF\" style={style} /> : null}\r\n        <ImagesGallery data={data}/>\r\n        <Button pageCount={pageCount} givenPage={ page }/>\r\n      </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}